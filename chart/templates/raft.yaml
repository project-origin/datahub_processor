---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hyperledger-deployment
spec:
  serviceName: "ledger"
  selector:
    matchLabels:
      app: hyperledger-deployment
  updateStrategy:
    type: RollingUpdate
  replicas: 1 # Only supports single node currently!
  template:
    metadata:
      labels:
        app: hyperledger-deployment
    spec:
      terminationGracePeriodSeconds: 15
      volumes:
        - name: ledger-key
          persistentVolumeClaim:
            claimName: ledger-key-disk

        - name: ledger-storage
          persistentVolumeClaim:
            claimName: ledger-storage-disk

      containers:
        - name: rest-api
          image: hyperledger/sawtooth-rest-api:1.2.4
          ports:
          - containerPort: 8008
          command:
            - bash
            - -c
          args:
            - sawtooth-rest-api
              -C 
              tcp://${HOSTNAME}:4004
              --bind
              0.0.0.0:8008

        - name: settings-processor
          image: hyperledger/sawtooth-settings-tp:1.2.4
          command:
            - bash
            - -c
          args:
            - settings-tp
              -v
              -C 
              tcp://${HOSTNAME}:4004

        - name: origin-processor-1
          image: projectorigin/ledger_tp:{{ .Values.tag }}

        - name: origin-processor-2
          image: projectorigin/ledger_tp:{{ .Values.tag }}

        - name: raft-engine
          image: hyperledger/sawtooth-raft-engine:0.1.2
          command:
            - bash
            - -c
          args:
            - raft-engine 
              -v 
              -C
              tcp://${HOSTNAME}:5050

        - name: validator
          image: hyperledger/sawtooth-validator:1.2.4
          ports:
            - name: tp
              containerPort: 4004
            - name: consensus
              containerPort: 5050
            - name: validators
              containerPort: 8800
          command:
            - bash
            - -c
          args:
            - if [ -f /etc/sawtooth/keys/validator.pub ]; then
                rm -f /var/lib/sawtooth/genesis.batch ;
              else
                sawadm keygen &&
                sawtooth keygen --key-dir /etc/sawtooth/keys settings &&
                sawset genesis -k /etc/sawtooth/keys/settings.priv -o /config-genesis.batch &&
                sawset proposal create
                    -k /etc/sawtooth/keys/settings.priv
                    sawtooth.consensus.algorithm.name=raft
                    sawtooth.consensus.algorithm.version=0.1
                    sawtooth.consensus.raft.peers=[\"$(cat /etc/sawtooth/keys/validator.pub)\"]
                    sawtooth.consensus.raft.heartbeat_tick=2
                    sawtooth.consensus.raft.election_tick=20
                    sawtooth.consensus.raft.period=500
                    sawtooth.publisher.max_batches_per_block=1000
                    -o /config.batch &&
                sawadm genesis /config-genesis.batch /config.batch;
              fi &&
              sawtooth-validator -v
                  --endpoint tcp://${HOSTNAME}:8800
                  --bind component:tcp://eth0:4004
                  --bind consensus:tcp://eth0:5050
                  --bind network:tcp://eth0:8800
                  --peering static
                  --scheduler parallel;

          volumeMounts:
            - name: ledger-key
              mountPath: /etc/sawtooth/keys
            - name: ledger-storage
              mountPath: /var/lib/sawtooth

          readinessProbe:
            exec:
              command: ["sawtooth", "status", "show"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
