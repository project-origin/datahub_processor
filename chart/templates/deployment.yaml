---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hyperledger-deployment
spec:
  serviceName: "ledger"
  selector:
    matchLabels:
      app: hyperledger-deployment
  updateStrategy:
    type: RollingUpdate
  replicas: 1 # Only supports single node currently!
  template:
    metadata:
      labels:
        app: hyperledger-deployment
    spec:
      containers:
        - name: rest-api
          image: hyperledger/sawtooth-rest-api:1.2.4
          ports:
            - containerPort: 8008
          command:
            - bash
            - -c
          args:
            - sawtooth-rest-api
              -C 
              tcp://${HOSTNAME}:4004
              --bind
              0.0.0.0:8008
#          resources:
#            requests:
#              memory: "100Mi"
#              cpu: "250m"
#            limits:
#              memory: "1000Mi"
#              cpu: "1000m"

        - name: settings-processor
          image: hyperledger/sawtooth-settings-tp:1.2.4
          command:
            - bash
            - -c
          args:
            - settings-tp
              -v
              -C 
              tcp://${HOSTNAME}:4004
#          resources:
#            requests:
#              memory: "100Mi"
#              cpu: "100m"
#            limits:
#              memory: "500Mi"
#              cpu: "500m"

        - name: origin-processor-1
          image: projectorigin/ledger-tp:{{ .Values.tag }}
#          resources:
#            requests:
#              memory: "100Mi"
#              cpu: "1000m"
#            limits:
#              memory: "500Mi"
#              cpu: "2000m"

        - name: engine
          image: hyperledger/sawtooth-devmode-engine-rust:1.2
          command:
            - bash
            - -c
          args:
            - devmode-engine-rust
              -vv
              -C 
              tcp://${HOSTNAME}:5050
#          resources:
#            requests:
#              memory: "100Mi"
#              cpu: "1000m"
#            limits:
#              memory: "500Mi"
#              cpu: "2000m"

        - name: validator
          image: hyperledger/sawtooth-validator:1.2.4
          ports:
            - name: tp
              containerPort: 4004
            - name: consensus
              containerPort: 5050
            - name: validators
              containerPort: 8800
          command:
            - bash
            - -c
          args:
            - if [ -f /etc/sawtooth/keys/validator.pub ]; then
                rm -f /var/lib/sawtooth/genesis.batch ;
              else 
                sawadm keygen &&
                sawtooth keygen my_key &&
                sawset genesis -k /root/.sawtooth/keys/my_key.priv &&
                sawset proposal create
                  -k /root/.sawtooth/keys/my_key.priv
                  sawtooth.consensus.algorithm.name=Devmode
                  sawtooth.consensus.algorithm.version=0.1
                  -o config.batch &&
                sawadm genesis config-genesis.batch config.batch;
              fi &&
              sawtooth-validator -vv
                --endpoint tcp://${HOSTNAME}:8800
                --bind component:tcp://eth0:4004
                --bind network:tcp://eth0:8800
                --bind consensus:tcp://eth0:5050
                --scheduler parallel;

          volumeMounts:
{{- if or (index .Values.disks "ledger-key-disk" "name") (index .Values.disks "ledger-key-disk" "claim") }}
            - name: ledger-key
              mountPath: /etc/sawtooth/keys
{{- end }}
{{- if or (index .Values.disks "ledger-storage-disk" "name") (index .Values.disks "ledger-storage-disk" "claim") }}
            - name: ledger-storage
              mountPath: /var/lib/sawtooth
{{- end }}
#          resources:
#            requests:
#              memory: "8000Mi"
#              cpu: "1000m"
#            limits:
#              memory: "12000Mi"
#              cpu: "2000m"


      volumes:
#        - name: ledger-key
#          azureDisk:
#            kind: Managed
#            diskName: ledger-key-disk
#            diskURI: {{ index .Values.disks "ledger-key-disk" }}
#            fsType: ext4
{{ if and (index .Values.disks "ledger-key-disk" "name") (index .Values.disks "ledger-key-disk" "uri") }}
        - name: ledger-key
          azureDisk:
            kind: Managed
            diskName: {{ index .Values.disks "ledger-key-disk" "name" }}
            diskURI: {{ index .Values.disks "ledger-key-disk" "uri" }}
            fsType: ext4
{{ else if index .Values.disks "ledger-key-disk" "claim" }}
        - name: ledger-key
          persistentVolumeClaim:
            claimName: {{ index .Values.disks "ledger-key-disk" "claim" }}
{{ end }}

#        - name: ledger-storage
#          azureDisk:
#            kind: Managed
#            diskName: ledger-storage-disk
#            diskURI: {{ index .Values.disks "ledger-storage-disk" }}
#            fsType: ext4
{{ if and (index .Values.disks "ledger-storage-disk" "name") (index .Values.disks "ledger-storage-disk" "uri") }}
        - name: ledger-storage
          azureDisk:
            kind: Managed
            diskName: {{ index .Values.disks "ledger-storage-disk" "name" }}
            diskURI: {{ index .Values.disks "ledger-storage-disk" "uri" }}
            fsType: ext4
{{ else if (index .Values.disks "ledger-storage-disk" "claim") }}
        - name: ledger-storage
          persistentVolumeClaim:
            claimName: {{ index .Values.disks "ledger-storage-disk" "claim" }}
{{ end }}
