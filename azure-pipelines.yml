# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- develop

resources:
- repo: self

variables:
  imageName: 'projectorigin/ledger_tp'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  kubeCon: alpha-origin-con
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    tag: '$(Build.BuildId)'
    namespace: 'alpha-project-origin'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    tag: 'dev.$(Build.BuildId)'
    namespace: 'dev-project-origin'

stages:
- stage: Test
  displayName: Unit test the code
  jobs:  
  - job: Test
    displayName: Unit tests
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: git submodule update --init --recursive
      displayName: Git get submodules

    - script: sudo mkdir /etc/sawtooth && sudo chmod 777 /etc/sawtooth &&
              sudo mkdir /var/lib/sawtooth && sudo chmod 777 /var/lib/sawtooth &&
              sudo mkdir /var/log/sawtooth && sudo chmod 777 /var/log/sawtooth
      displayName: Create sawtooth folders

    - script: sudo apt update
      displayName: Update repo

    - script: sudo apt install -y pkg-config gcc libsecp256k1-dev libzmq3-dev
      displayName: Install packages

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'

    - script: python -m pip install -r requirements.txt
      displayName: 'Install requirements'

    - script: pytest -m unittest --cov-report=term-missing --cov-fail-under=100 --cov=src/datahub_processor
      displayName: 'Run tests'
- stage: build_and_publish
  displayName: Build and publish
  jobs:  
  - job: docker_build_push
    displayName: Docker build and push
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: git submodule update --init --recursive
      displayName: Git get submodules

    - task: Docker@2
      displayName: Build docker image
      inputs:
        command: build
        repository: $(imageName)
        Dockerfile: Dockerfile
        tags: |
          latest
          $(tag)
    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        repository: $(imageName)
        containerRegistry: dockerHub
        tags: |
          latest
          $(tag)

- stage: update_cluster
  displayName: Update kubernetes
  jobs:  
  - job: push_to_cluster
    displayName: Push to Cluster
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: HelmDeploy@0
        displayName: Helm upgrade
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: '$(kubeCon)'
          namespace: $(namespace)
          command: upgrade
          chartType: filepath
          chartPath: ./chart
          releaseName: ledger-tp
          overrideValues: tag=$(tag)
          install: true
          waitForExecution: true