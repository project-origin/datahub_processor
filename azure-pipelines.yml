trigger:
  - '*'

pr:
  - '*'

resources:
  repositories:
    - repository: self
    - repository: templates
      type: github
      endpoint: project-origin
      name: project-origin/pipeline-templates

variables:
  - name: releaseName
    value: 'ledger-tp'
  - name: imageName
    value: 'projectorigin/$(releaseName)'
  - template: vars.yml@templates

pool:
  vmImage: 'ubuntu-latest'

jobs:
  # Ledger has custom pytest job, since it requires sawtooth to be installed.
  - job: run_pytest
    displayName: Test
    steps:
      - script: git submodule update --init --recursive
        displayName: Git get submodules
        
      - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
        displayName: Append tag with git describe

      - script: sudo mkdir -p /etc/sawtooth && sudo chmod 777 /etc/sawtooth &&
                sudo mkdir -p /var/lib/sawtooth && sudo chmod 777 /var/lib/sawtooth &&
                sudo mkdir -p /var/log/sawtooth && sudo chmod 777 /var/log/sawtooth
        displayName: Create sawtooth folders

      - script: sudo apt update
        displayName: Update repo

      - script: sudo apt install -y pkg-config gcc libsecp256k1-dev libzmq3-dev
        displayName: Install packages

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'

      - script: pip install --upgrade twine wheel setuptools pip pipenv
        displayName: 'Upgrading/installing Python packages'

      - script: python -m pipenv install -d
        displayName: 'Installing dependencies from Pipenv'

      - script: python -m pipenv run pytest -m unittest --cov-report=term-missing --cov-fail-under=100 --cov=src/datahub_processor
        displayName: 'Run tests'

  # image build and deploy requires the kubeCon and other variable sto be defined in a variable group in Azure DevOps
  - ${{ if ne(variables['kubeCon'], '') }}:

    - template: job-docker-build.yml@templates
      parameters:
        dependsOn: run_pytest
        imageName: $(imageName)
        tag: $(tag)
        
    - template: job-deploy.yml@templates
      parameters:
        dependsOn: docker_build
        kubeCon: $(kubeCon)
        namespace: $(namespace)
        releaseName: $(releaseName)
        deploymentEnvironment: $(deploymentEnvironment)
        overrideValues: tag=$(tag)
        pool:
          ${{ if ne(variables['poolName'], '') }}:
            name: $(poolName)
          ${{ if eq(variables['poolName'], '') }}:
            vmImage: 'ubuntu-latest'