trigger:
  - master
  - preprod
  - test
  - develop

pr: none

resources:
  repositories:
    - repository: self
    - repository: templates
      type: github
      endpoint: project-origin
      name: project-origin/pipeline-templates
      ref: pipeline-templates

variables:
  - name: releaseName
    value: 'ledger-tp'
  - name: imageName
    value: 'projectorigin/$(releaseName)'
  - template: vars.yml@templates
  - group: '$(Build.SourceBranchName)-values'
#  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
#    - group: production-values
#  ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
#    - group: $(Build.SourceBranchName)-values

pool:
  vmImage: 'ubuntu-latest'

jobs:
  # Ledger has custom pytest job, since it requires sawtooth to be installed.
  - job: run_pytest
    displayName: Test
    steps:
      - script: git submodule update --init --recursive
        displayName: Git get submodules
        
      - script: echo "##vso[task.setvariable variable=tag]$(tag)$(git describe --tags --long | sed '0,/-/s/-/./')"
        displayName: Append tag with git describe

      - script: sudo mkdir -p /etc/sawtooth && sudo chmod 777 /etc/sawtooth &&
                sudo mkdir -p /var/lib/sawtooth && sudo chmod 777 /var/lib/sawtooth &&
                sudo mkdir -p /var/log/sawtooth && sudo chmod 777 /var/log/sawtooth
        displayName: Create sawtooth folders

      - script: sudo apt update
        displayName: Update repo

      - script: sudo apt install -y pkg-config gcc libsecp256k1-dev libzmq3-dev
        displayName: Install packages

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.7'

      - script: pip install --upgrade twine wheel setuptools pip pipenv
        displayName: 'Upgrading/installing Python packages'

      - script: python -m pipenv install -d
        displayName: 'Installing dependencies from Pipenv'

      - script: python -m pipenv run pytest -m unittest --cov-report=term-missing --cov-fail-under=100 --cov=src/datahub_processor
        displayName: 'Run tests'

  - template: job-docker-build.yml@templates
    parameters:
      dependsOn: run_pytest
      imageName: $(imageName)
      tag: $(tag)

  - template: job-deploy.yml@templates
    parameters:
      dependsOn: docker_build
      kubeCon: $(kubeCon)
      namespace: $(namespace)
      releaseName: $(releaseName)
      deploymentEnvironment: $(deploymentEnvironment)
      overrideValues: tag=$(tag)
      preDeploy:
        - script: python3 pipeline-templates/yaml_json_converter.py yaml_to_json chart/values.yaml values.json
          displayName: Convert values.yaml to values.json
        - task: FileTransform@1
          displayName: Replace variables in values.json
          inputs:
            folderPath: '$(System.DefaultWorkingDirectory)'
            fileType: json
            targetFiles: values.json
        - script: python3 pipeline-templates/yaml_json_converter.py json_to_yaml values.json chart/values.yaml
          displayName: Convert values.json to values.yaml
      pool:
        ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
          name: $(poolName)
        ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
          vmImage: 'ubuntu-latest'
