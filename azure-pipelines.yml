trigger:
  branches:
    include:
    - master
    - test
    - develop

# no PR triggers
pr: none

resources:
- repo: self

variables:
  imageName: 'projectorigin/ledger_tp'
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    kubeCon: 'kubecon-eloprindelse-prod'
    namespace: 'eloprindelse'
    tag: '$(Build.BuildId)'
  ${{ if eq(variables['Build.SourceBranchName'], 'test') }}:
    kubeCon: 'test-kube-con'
    namespace: 'test-project-origin'
    tag: 'test.$(Build.BuildId)'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    kubeCon: 'dev-kube-con'
    namespace: 'dev-project-origin'
    tag: 'canary'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Test
    displayName: Unit test the code
    jobs:  
      - job: build_deploy
        displayName: Build and Deploy

        steps:
          - script: git submodule update --init --recursive
            displayName: Git get submodules

          - script: sudo mkdir -p /etc/sawtooth && sudo chmod 777 /etc/sawtooth &&
                    sudo mkdir -p /var/lib/sawtooth && sudo chmod 777 /var/lib/sawtooth &&
                    sudo mkdir -p /var/log/sawtooth && sudo chmod 777 /var/log/sawtooth
            displayName: Create sawtooth folders

          - script: sudo apt update
            displayName: Update repo

          - script: sudo apt install -y pkg-config gcc libsecp256k1-dev libzmq3-dev
            displayName: Install packages

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7'

          - script: python -m pip install -r requirements.txt
            displayName: 'Install requirements'

          - script: pytest -m unittest --cov-report=term-missing --cov-fail-under=100 --cov=src/datahub_processor
            displayName: 'Run tests'

          - script: git submodule update --init --recursive
            displayName: Git get submodules

          - task: Docker@2
            displayName: Build docker image
            inputs:
              command: build
              repository: $(imageName)
              Dockerfile: Dockerfile
              tags: |
                latest
                $(tag)

          - task: Docker@2
            displayName: Push image
            inputs:
              command: push
              repository: $(imageName)
              containerRegistry: dockerHub
              tags: |
                latest
                $(tag)

  - stage: deploy
    displayName: Deploy to kubernetes
    jobs:  
      - job: deploy
        displayName:  Deploy to kubernetes
        steps:
          - task: HelmDeploy@0
            displayName: Helm upgrade
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(kubeCon)
              namespace: $(namespace)
              command: upgrade
              chartType: filepath
              chartPath: ./chart
              releaseName: ledger-tp
              overrideValues: tag=$(tag)
              install: true
              waitForExecution: true